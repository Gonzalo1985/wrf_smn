shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?source
?tabPanel
?addCircles
library(leaflet)
?addCircles
addCircleMarkers()
?addCircleMarkers()
draw.map <- function(x = x, y = y){
if (length(x) > 1 & length(y) > 1)
{sv.x <- -60 ; sv.y <- -35 ; sv.zoom <- 6}
else
{sv.x <- x[1] ; sv.y <- y[1] ; sv.zoom <- 8}
df <- data.frame(lon = x, lat = y)
df <- st_as_sf(df, coords = c("lon", "lat"), crs = 4326, agr = "constant")
df$popup <- paste0("Lon: ", st_coordinates(df)[, 1],
"<br>Lat: ", st_coordinates(df)[, 2])
mapa <- leaflet(data = NULL, width = 1300, height = 1600,
options = leafletOptions(preferCanvas = TRUE)) %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/capabaseargenmap@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap IGN") %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/mapabase_topo@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap Topo IGN") %>%
addTiles(urlTemplate = "//server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",
attribution = "Servicio Meteorológico Nacional", group = "OSM (default)") %>%
addCircleMarkers(data = df, lng = ~lon, lat = ~lat, popup = ~popup,
radius = 10,
color = "#333333",
fillColor = "#66c2a5", group = "Punto de interés") %>%
addLayersControl(baseGroups = c("Argenmap IGN", "Argenmap Topo IGN", "OSM (default)"),
overlayGroups = c("Punto de interés"),
options = layersControlOptions(collapsed = FALSE)) %>%
setView(lat = sv.y, lng = sv.x, zoom = sv.zoom)
return(mapa)
}
x = -56
y = -35
draw.map(x = x, y = y)
library("aws.s3")
library("ncdf4")
library("sp")
library("sf")
library("dplyr")
library("shiny")
library("shinyWidgets")
library("shinydashboard")
library("waiter")
library("leaflet")
library("rlist")
library("graphics")
library("fields")
library("raster")
library("RColorBrewer")
library("purrr")
library("ggplot2")
library("png")
library("patchwork")
library("DT") # librería para las fcs: dataTableOutput() y renderDataTable()
library("tidyr")
library("xts")
library("dygraphs")
library("viridis")
library("terra")
library("lubridate")
draw.map(x = x, y = y)
draw.map <- function(x = x, y = y){
if (length(x) > 1 & length(y) > 1)
{sv.x <- -60 ; sv.y <- -35 ; sv.zoom <- 6}
else
{sv.x <- x[1] ; sv.y <- y[1] ; sv.zoom <- 8}
df <- data.frame(lon = x, lat = y)
df <- st_as_sf(df, coords = c("lon", "lat"), crs = 4326, agr = "constant")
print(df)
df$popup <- paste0("Lon: ", st_coordinates(df)[, 1],
"<br>Lat: ", st_coordinates(df)[, 2])
mapa <- leaflet(data = NULL, width = 1300, height = 1600,
options = leafletOptions(preferCanvas = TRUE)) %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/capabaseargenmap@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap IGN") %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/mapabase_topo@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap Topo IGN") %>%
addTiles(urlTemplate = "//server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",
attribution = "Servicio Meteorológico Nacional", group = "OSM (default)") %>%
addCircleMarkers(data = df, lng = ~lon, lat = ~lat, popup = ~popup,
radius = 10,
color = "#333333",
fillColor = "#66c2a5", group = "Punto de interés") %>%
addLayersControl(baseGroups = c("Argenmap IGN", "Argenmap Topo IGN", "OSM (default)"),
overlayGroups = c("Punto de interés"),
options = layersControlOptions(collapsed = FALSE)) %>%
setView(lat = sv.y, lng = sv.x, zoom = sv.zoom)
return(mapa)
}
draw.map(x = x, y = y)
draw.map <- function(x = x, y = y){
if (length(x) > 1 & length(y) > 1)
{sv.x <- -60 ; sv.y <- -35 ; sv.zoom <- 6}
else
{sv.x <- x[1] ; sv.y <- y[1] ; sv.zoom <- 8}
df <- data.frame(lon = x, lat = y)
df <- st_as_sf(df, coords = c("lon", "lat"), crs = 4326, agr = "constant")
df$popup <- paste0("Lon: ", st_coordinates(df)[, 1],
"<br>Lat: ", st_coordinates(df)[, 2])
print(df)
mapa <- leaflet(data = NULL, width = 1300, height = 1600,
options = leafletOptions(preferCanvas = TRUE)) %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/capabaseargenmap@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap IGN") %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/mapabase_topo@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap Topo IGN") %>%
addTiles(urlTemplate = "//server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",
attribution = "Servicio Meteorológico Nacional", group = "OSM (default)") %>%
addCircleMarkers(data = df, lng = ~lon, lat = ~lat, popup = ~popup,
radius = 10,
color = "#333333",
fillColor = "#66c2a5", group = "Punto de interés") %>%
addLayersControl(baseGroups = c("Argenmap IGN", "Argenmap Topo IGN", "OSM (default)"),
overlayGroups = c("Punto de interés"),
options = layersControlOptions(collapsed = FALSE)) %>%
setView(lat = sv.y, lng = sv.x, zoom = sv.zoom)
return(mapa)
}
draw.map(x = x, y = y)
df <- data.frame(lon = x, lat = y)
df <- st_as_sf(df, coords = c("lon", "lat"), crs = 4326, agr = "constant")
df
st_coordinates(df)
st_coordinates(df)Ñ,1
st_coordinates(df)[,1]
df$popup <- paste0("Lon: ", st_coordinates(df)[, 1],
"<br>Lat: ", st_coordinates(df)[, 2])
df
draw.map <- function(x = x, y = y){
if (length(x) > 1 & length(y) > 1)
{sv.x <- -60 ; sv.y <- -35 ; sv.zoom <- 6}
else
{sv.x <- x[1] ; sv.y <- y[1] ; sv.zoom <- 8}
df <- data.frame(lon = x, lat = y)
df <- st_as_sf(df, coords = c("lon", "lat"), crs = 4326, agr = "constant")
df$popup <- paste0("Lon: ", st_coordinates(df)[, 1],
"<br>Lat: ", st_coordinates(df)[, 2])
df
mapa <- leaflet(data = NULL, width = 1300, height = 1600,
options = leafletOptions(preferCanvas = TRUE)) %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/capabaseargenmap@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap IGN") %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/mapabase_topo@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap Topo IGN") %>%
addTiles(urlTemplate = "//server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",
attribution = "Servicio Meteorológico Nacional", group = "OSM (default)") %>%
addCircleMarkers(data = df, lng = ~lon, lat = ~lat, popup = ~popup,
radius = 10,
color = "#333333",
fillColor = "#66c2a5", group = "Punto de interés") %>%
addLayersControl(baseGroups = c("Argenmap IGN", "Argenmap Topo IGN", "OSM (default)"),
overlayGroups = c("Punto de interés"),
options = layersControlOptions(collapsed = FALSE)) %>%
setView(lat = sv.y, lng = sv.x, zoom = sv.zoom)
return(mapa)
}
draw.map(x = x, y = y)
sdf
df
df$geometry
df$popup
df$geometry
df$geometry$lon
df$geometry[,1]
df$geometry[1]
df$geometry[1,]
df$geometry
df$geometry[[1]]
df$geometry[[2]]
df$geometry[[1]]
df$geometry[[2]]
df$geometry[[1]]
st_coordinates(df)
draw.map <- function(x = x, y = y){
if (length(x) > 1 & length(y) > 1)
{sv.x <- -60 ; sv.y <- -35 ; sv.zoom <- 6}
else
{sv.x <- x[1] ; sv.y <- y[1] ; sv.zoom <- 8}
df <- data.frame(lon = x, lat = y)
df <- st_as_sf(df, coords = c("lon", "lat"), crs = 4326, agr = "constant")
df$popup <- paste0("Lon: ", st_coordinates(df)[, 1],
"<br>Lat: ", st_coordinates(df)[, 2])
mapa <- leaflet(data = NULL, width = 1300, height = 1600,
options = leafletOptions(preferCanvas = TRUE)) %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/capabaseargenmap@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap IGN") %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/mapabase_topo@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap Topo IGN") %>%
addTiles(urlTemplate = "//server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",
attribution = "Servicio Meteorológico Nacional", group = "OSM (default)") %>%
addCircleMarkers(data = df,
lng = st_coordinates(df)[, 1],
lat = st_coordinates(df)[, 2],
popup = ~popup,
radius = 10,
color = "#333333",
fillColor = "#66c2a5", group = "Punto de interés") %>%
addLayersControl(baseGroups = c("Argenmap IGN", "Argenmap Topo IGN", "OSM (default)"),
overlayGroups = c("Punto de interés"),
options = layersControlOptions(collapsed = FALSE)) %>%
setView(lat = sv.y, lng = sv.x, zoom = sv.zoom)
return(mapa)
}
draw.map(x = x, y = y)
draw.map <- function(x = x, y = y){
if (length(x) > 1 & length(y) > 1)
{sv.x <- -60 ; sv.y <- -35 ; sv.zoom <- 6}
else
{sv.x <- x[1] ; sv.y <- y[1] ; sv.zoom <- 8}
df <- data.frame(lon = x, lat = y)
df <- st_as_sf(df, coords = c("lon", "lat"), crs = 4326, agr = "constant")
df$popup <- paste0("Lon: ", st_coordinates(df)[, 1],
"<br>Lat: ", st_coordinates(df)[, 2])
mapa <- leaflet(data = NULL, width = 1300, height = 1600,
options = leafletOptions(preferCanvas = TRUE)) %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/capabaseargenmap@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap IGN") %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/mapabase_topo@EPSG%3A3857@png/{z}/{x}/{-y}.png",
attribution = "Servicio Meteorológico Nacional", group = "Argenmap Topo IGN") %>%
addTiles(urlTemplate = "//server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",
attribution = "Servicio Meteorológico Nacional", group = "OSM (default)") %>%
addCircleMarkers(data = df,
lng = st_coordinates(df)[, 1],
lat = st_coordinates(df)[, 2],
popup = ~popup,
radius = 5,
color = "#333333",
fillColor = "#66c2a5", group = "Punto de interés") %>%
addLayersControl(baseGroups = c("Argenmap IGN", "Argenmap Topo IGN", "OSM (default)"),
overlayGroups = c("Punto de interés"),
options = layersControlOptions(collapsed = FALSE)) %>%
setView(lat = sv.y, lng = sv.x, zoom = sv.zoom)
return(mapa)
}
draw.map(x = x, y = y)
shiny::runApp()
?addCircleMarkers
runApp()
runApp()
runApp()
runApp()
runApp()
